// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: a2a.proto
// Protobuf Java Version: 4.31.1

package io.a2a.grpc;

/**
 * Protobuf type {@code a2a.v1.ImplicitOAuthFlow}
 */
@com.google.protobuf.Generated
public final class ImplicitOAuthFlow extends
    com.google.protobuf.GeneratedMessage implements
    // @@protoc_insertion_point(message_implements:a2a.v1.ImplicitOAuthFlow)
    ImplicitOAuthFlowOrBuilder {
private static final long serialVersionUID = 0L;
  static {
    com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
      com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
      /* major= */ 4,
      /* minor= */ 31,
      /* patch= */ 1,
      /* suffix= */ "",
      ImplicitOAuthFlow.class.getName());
  }
  // Use ImplicitOAuthFlow.newBuilder() to construct.
  private ImplicitOAuthFlow(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
    super(builder);
  }
  private ImplicitOAuthFlow() {
    authorizationUrl_ = "";
    refreshUrl_ = "";
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return io.a2a.grpc.A2A.internal_static_a2a_v1_ImplicitOAuthFlow_descriptor;
  }

  @SuppressWarnings({"rawtypes"})
  @java.lang.Override
  protected com.google.protobuf.MapFieldReflectionAccessor internalGetMapFieldReflection(
      int number) {
    switch (number) {
      case 3:
        return internalGetScopes();
      default:
        throw new RuntimeException(
            "Invalid map field number: " + number);
    }
  }
  @java.lang.Override
  protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return io.a2a.grpc.A2A.internal_static_a2a_v1_ImplicitOAuthFlow_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            io.a2a.grpc.ImplicitOAuthFlow.class, io.a2a.grpc.ImplicitOAuthFlow.Builder.class);
  }

  public static final int AUTHORIZATION_URL_FIELD_NUMBER = 1;
  @SuppressWarnings("serial")
  private volatile java.lang.Object authorizationUrl_ = "";
  /**
   * <pre>
   * The authorization URL to be used for this flow. This MUST be in the
   * form of a URL. The OAuth2 standard requires the use of TLS
   * </pre>
   *
   * <code>string authorization_url = 1 [json_name = "authorizationUrl"];</code>
   * @return The authorizationUrl.
   */
  @java.lang.Override
  public java.lang.String getAuthorizationUrl() {
    java.lang.Object ref = authorizationUrl_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      authorizationUrl_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * The authorization URL to be used for this flow. This MUST be in the
   * form of a URL. The OAuth2 standard requires the use of TLS
   * </pre>
   *
   * <code>string authorization_url = 1 [json_name = "authorizationUrl"];</code>
   * @return The bytes for authorizationUrl.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getAuthorizationUrlBytes() {
    java.lang.Object ref = authorizationUrl_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      authorizationUrl_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int REFRESH_URL_FIELD_NUMBER = 2;
  @SuppressWarnings("serial")
  private volatile java.lang.Object refreshUrl_ = "";
  /**
   * <pre>
   * The URL to be used for obtaining refresh tokens. This MUST be in the
   * form of a URL. The OAuth2 standard requires the use of TLS.
   * </pre>
   *
   * <code>string refresh_url = 2 [json_name = "refreshUrl"];</code>
   * @return The refreshUrl.
   */
  @java.lang.Override
  public java.lang.String getRefreshUrl() {
    java.lang.Object ref = refreshUrl_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      refreshUrl_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * The URL to be used for obtaining refresh tokens. This MUST be in the
   * form of a URL. The OAuth2 standard requires the use of TLS.
   * </pre>
   *
   * <code>string refresh_url = 2 [json_name = "refreshUrl"];</code>
   * @return The bytes for refreshUrl.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getRefreshUrlBytes() {
    java.lang.Object ref = refreshUrl_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      refreshUrl_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int SCOPES_FIELD_NUMBER = 3;
  private static final class ScopesDefaultEntryHolder {
    static final com.google.protobuf.MapEntry<
        java.lang.String, java.lang.String> defaultEntry =
            com.google.protobuf.MapEntry
            .<java.lang.String, java.lang.String>newDefaultInstance(
                io.a2a.grpc.A2A.internal_static_a2a_v1_ImplicitOAuthFlow_ScopesEntry_descriptor, 
                com.google.protobuf.WireFormat.FieldType.STRING,
                "",
                com.google.protobuf.WireFormat.FieldType.STRING,
                "");
  }
  @SuppressWarnings("serial")
  private com.google.protobuf.MapField<
      java.lang.String, java.lang.String> scopes_;
  private com.google.protobuf.MapField<java.lang.String, java.lang.String>
  internalGetScopes() {
    if (scopes_ == null) {
      return com.google.protobuf.MapField.emptyMapField(
          ScopesDefaultEntryHolder.defaultEntry);
    }
    return scopes_;
  }
  public int getScopesCount() {
    return internalGetScopes().getMap().size();
  }
  /**
   * <pre>
   * The available scopes for the OAuth2 security scheme. A map between the
   * scope name and a short description for it. The map MAY be empty.
   * </pre>
   *
   * <code>map&lt;string, string&gt; scopes = 3 [json_name = "scopes"];</code>
   */
  @java.lang.Override
  public boolean containsScopes(
      java.lang.String key) {
    if (key == null) { throw new NullPointerException("map key"); }
    return internalGetScopes().getMap().containsKey(key);
  }
  /**
   * Use {@link #getScopesMap()} instead.
   */
  @java.lang.Override
  @java.lang.Deprecated
  public java.util.Map<java.lang.String, java.lang.String> getScopes() {
    return getScopesMap();
  }
  /**
   * <pre>
   * The available scopes for the OAuth2 security scheme. A map between the
   * scope name and a short description for it. The map MAY be empty.
   * </pre>
   *
   * <code>map&lt;string, string&gt; scopes = 3 [json_name = "scopes"];</code>
   */
  @java.lang.Override
  public java.util.Map<java.lang.String, java.lang.String> getScopesMap() {
    return internalGetScopes().getMap();
  }
  /**
   * <pre>
   * The available scopes for the OAuth2 security scheme. A map between the
   * scope name and a short description for it. The map MAY be empty.
   * </pre>
   *
   * <code>map&lt;string, string&gt; scopes = 3 [json_name = "scopes"];</code>
   */
  @java.lang.Override
  public /* nullable */
java.lang.String getScopesOrDefault(
      java.lang.String key,
      /* nullable */
java.lang.String defaultValue) {
    if (key == null) { throw new NullPointerException("map key"); }
    java.util.Map<java.lang.String, java.lang.String> map =
        internalGetScopes().getMap();
    return map.containsKey(key) ? map.get(key) : defaultValue;
  }
  /**
   * <pre>
   * The available scopes for the OAuth2 security scheme. A map between the
   * scope name and a short description for it. The map MAY be empty.
   * </pre>
   *
   * <code>map&lt;string, string&gt; scopes = 3 [json_name = "scopes"];</code>
   */
  @java.lang.Override
  public java.lang.String getScopesOrThrow(
      java.lang.String key) {
    if (key == null) { throw new NullPointerException("map key"); }
    java.util.Map<java.lang.String, java.lang.String> map =
        internalGetScopes().getMap();
    if (!map.containsKey(key)) {
      throw new java.lang.IllegalArgumentException();
    }
    return map.get(key);
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (!com.google.protobuf.GeneratedMessage.isStringEmpty(authorizationUrl_)) {
      com.google.protobuf.GeneratedMessage.writeString(output, 1, authorizationUrl_);
    }
    if (!com.google.protobuf.GeneratedMessage.isStringEmpty(refreshUrl_)) {
      com.google.protobuf.GeneratedMessage.writeString(output, 2, refreshUrl_);
    }
    com.google.protobuf.GeneratedMessage
      .serializeStringMapTo(
        output,
        internalGetScopes(),
        ScopesDefaultEntryHolder.defaultEntry,
        3);
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!com.google.protobuf.GeneratedMessage.isStringEmpty(authorizationUrl_)) {
      size += com.google.protobuf.GeneratedMessage.computeStringSize(1, authorizationUrl_);
    }
    if (!com.google.protobuf.GeneratedMessage.isStringEmpty(refreshUrl_)) {
      size += com.google.protobuf.GeneratedMessage.computeStringSize(2, refreshUrl_);
    }
    for (java.util.Map.Entry<java.lang.String, java.lang.String> entry
         : internalGetScopes().getMap().entrySet()) {
      com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
      scopes__ = ScopesDefaultEntryHolder.defaultEntry.newBuilderForType()
          .setKey(entry.getKey())
          .setValue(entry.getValue())
          .build();
      size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, scopes__);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof io.a2a.grpc.ImplicitOAuthFlow)) {
      return super.equals(obj);
    }
    io.a2a.grpc.ImplicitOAuthFlow other = (io.a2a.grpc.ImplicitOAuthFlow) obj;

    if (!getAuthorizationUrl()
        .equals(other.getAuthorizationUrl())) return false;
    if (!getRefreshUrl()
        .equals(other.getRefreshUrl())) return false;
    if (!internalGetScopes().equals(
        other.internalGetScopes())) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + AUTHORIZATION_URL_FIELD_NUMBER;
    hash = (53 * hash) + getAuthorizationUrl().hashCode();
    hash = (37 * hash) + REFRESH_URL_FIELD_NUMBER;
    hash = (53 * hash) + getRefreshUrl().hashCode();
    if (!internalGetScopes().getMap().isEmpty()) {
      hash = (37 * hash) + SCOPES_FIELD_NUMBER;
      hash = (53 * hash) + internalGetScopes().hashCode();
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static io.a2a.grpc.ImplicitOAuthFlow parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.a2a.grpc.ImplicitOAuthFlow parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.a2a.grpc.ImplicitOAuthFlow parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.a2a.grpc.ImplicitOAuthFlow parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.a2a.grpc.ImplicitOAuthFlow parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.a2a.grpc.ImplicitOAuthFlow parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.a2a.grpc.ImplicitOAuthFlow parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input);
  }
  public static io.a2a.grpc.ImplicitOAuthFlow parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public static io.a2a.grpc.ImplicitOAuthFlow parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseDelimitedWithIOException(PARSER, input);
  }

  public static io.a2a.grpc.ImplicitOAuthFlow parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static io.a2a.grpc.ImplicitOAuthFlow parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input);
  }
  public static io.a2a.grpc.ImplicitOAuthFlow parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(io.a2a.grpc.ImplicitOAuthFlow prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessage.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code a2a.v1.ImplicitOAuthFlow}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessage.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:a2a.v1.ImplicitOAuthFlow)
      io.a2a.grpc.ImplicitOAuthFlowOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.a2a.grpc.A2A.internal_static_a2a_v1_ImplicitOAuthFlow_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapFieldReflectionAccessor internalGetMapFieldReflection(
        int number) {
      switch (number) {
        case 3:
          return internalGetScopes();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapFieldReflectionAccessor internalGetMutableMapFieldReflection(
        int number) {
      switch (number) {
        case 3:
          return internalGetMutableScopes();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.a2a.grpc.A2A.internal_static_a2a_v1_ImplicitOAuthFlow_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.a2a.grpc.ImplicitOAuthFlow.class, io.a2a.grpc.ImplicitOAuthFlow.Builder.class);
    }

    // Construct using io.a2a.grpc.ImplicitOAuthFlow.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      authorizationUrl_ = "";
      refreshUrl_ = "";
      internalGetMutableScopes().clear();
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return io.a2a.grpc.A2A.internal_static_a2a_v1_ImplicitOAuthFlow_descriptor;
    }

    @java.lang.Override
    public io.a2a.grpc.ImplicitOAuthFlow getDefaultInstanceForType() {
      return io.a2a.grpc.ImplicitOAuthFlow.getDefaultInstance();
    }

    @java.lang.Override
    public io.a2a.grpc.ImplicitOAuthFlow build() {
      io.a2a.grpc.ImplicitOAuthFlow result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public io.a2a.grpc.ImplicitOAuthFlow buildPartial() {
      io.a2a.grpc.ImplicitOAuthFlow result = new io.a2a.grpc.ImplicitOAuthFlow(this);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartial0(io.a2a.grpc.ImplicitOAuthFlow result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.authorizationUrl_ = authorizationUrl_;
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.refreshUrl_ = refreshUrl_;
      }
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.scopes_ = internalGetScopes();
        result.scopes_.makeImmutable();
      }
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof io.a2a.grpc.ImplicitOAuthFlow) {
        return mergeFrom((io.a2a.grpc.ImplicitOAuthFlow)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(io.a2a.grpc.ImplicitOAuthFlow other) {
      if (other == io.a2a.grpc.ImplicitOAuthFlow.getDefaultInstance()) return this;
      if (!other.getAuthorizationUrl().isEmpty()) {
        authorizationUrl_ = other.authorizationUrl_;
        bitField0_ |= 0x00000001;
        onChanged();
      }
      if (!other.getRefreshUrl().isEmpty()) {
        refreshUrl_ = other.refreshUrl_;
        bitField0_ |= 0x00000002;
        onChanged();
      }
      internalGetMutableScopes().mergeFrom(
          other.internalGetScopes());
      bitField0_ |= 0x00000004;
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              authorizationUrl_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000001;
              break;
            } // case 10
            case 18: {
              refreshUrl_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000002;
              break;
            } // case 18
            case 26: {
              com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
              scopes__ = input.readMessage(
                  ScopesDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              internalGetMutableScopes().getMutableMap().put(
                  scopes__.getKey(), scopes__.getValue());
              bitField0_ |= 0x00000004;
              break;
            } // case 26
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private java.lang.Object authorizationUrl_ = "";
    /**
     * <pre>
     * The authorization URL to be used for this flow. This MUST be in the
     * form of a URL. The OAuth2 standard requires the use of TLS
     * </pre>
     *
     * <code>string authorization_url = 1 [json_name = "authorizationUrl"];</code>
     * @return The authorizationUrl.
     */
    public java.lang.String getAuthorizationUrl() {
      java.lang.Object ref = authorizationUrl_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        authorizationUrl_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * The authorization URL to be used for this flow. This MUST be in the
     * form of a URL. The OAuth2 standard requires the use of TLS
     * </pre>
     *
     * <code>string authorization_url = 1 [json_name = "authorizationUrl"];</code>
     * @return The bytes for authorizationUrl.
     */
    public com.google.protobuf.ByteString
        getAuthorizationUrlBytes() {
      java.lang.Object ref = authorizationUrl_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        authorizationUrl_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * The authorization URL to be used for this flow. This MUST be in the
     * form of a URL. The OAuth2 standard requires the use of TLS
     * </pre>
     *
     * <code>string authorization_url = 1 [json_name = "authorizationUrl"];</code>
     * @param value The authorizationUrl to set.
     * @return This builder for chaining.
     */
    public Builder setAuthorizationUrl(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      authorizationUrl_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The authorization URL to be used for this flow. This MUST be in the
     * form of a URL. The OAuth2 standard requires the use of TLS
     * </pre>
     *
     * <code>string authorization_url = 1 [json_name = "authorizationUrl"];</code>
     * @return This builder for chaining.
     */
    public Builder clearAuthorizationUrl() {
      authorizationUrl_ = getDefaultInstance().getAuthorizationUrl();
      bitField0_ = (bitField0_ & ~0x00000001);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The authorization URL to be used for this flow. This MUST be in the
     * form of a URL. The OAuth2 standard requires the use of TLS
     * </pre>
     *
     * <code>string authorization_url = 1 [json_name = "authorizationUrl"];</code>
     * @param value The bytes for authorizationUrl to set.
     * @return This builder for chaining.
     */
    public Builder setAuthorizationUrlBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      authorizationUrl_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }

    private java.lang.Object refreshUrl_ = "";
    /**
     * <pre>
     * The URL to be used for obtaining refresh tokens. This MUST be in the
     * form of a URL. The OAuth2 standard requires the use of TLS.
     * </pre>
     *
     * <code>string refresh_url = 2 [json_name = "refreshUrl"];</code>
     * @return The refreshUrl.
     */
    public java.lang.String getRefreshUrl() {
      java.lang.Object ref = refreshUrl_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        refreshUrl_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * The URL to be used for obtaining refresh tokens. This MUST be in the
     * form of a URL. The OAuth2 standard requires the use of TLS.
     * </pre>
     *
     * <code>string refresh_url = 2 [json_name = "refreshUrl"];</code>
     * @return The bytes for refreshUrl.
     */
    public com.google.protobuf.ByteString
        getRefreshUrlBytes() {
      java.lang.Object ref = refreshUrl_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        refreshUrl_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * The URL to be used for obtaining refresh tokens. This MUST be in the
     * form of a URL. The OAuth2 standard requires the use of TLS.
     * </pre>
     *
     * <code>string refresh_url = 2 [json_name = "refreshUrl"];</code>
     * @param value The refreshUrl to set.
     * @return This builder for chaining.
     */
    public Builder setRefreshUrl(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      refreshUrl_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The URL to be used for obtaining refresh tokens. This MUST be in the
     * form of a URL. The OAuth2 standard requires the use of TLS.
     * </pre>
     *
     * <code>string refresh_url = 2 [json_name = "refreshUrl"];</code>
     * @return This builder for chaining.
     */
    public Builder clearRefreshUrl() {
      refreshUrl_ = getDefaultInstance().getRefreshUrl();
      bitField0_ = (bitField0_ & ~0x00000002);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The URL to be used for obtaining refresh tokens. This MUST be in the
     * form of a URL. The OAuth2 standard requires the use of TLS.
     * </pre>
     *
     * <code>string refresh_url = 2 [json_name = "refreshUrl"];</code>
     * @param value The bytes for refreshUrl to set.
     * @return This builder for chaining.
     */
    public Builder setRefreshUrlBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      refreshUrl_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }

    private com.google.protobuf.MapField<
        java.lang.String, java.lang.String> scopes_;
    private com.google.protobuf.MapField<java.lang.String, java.lang.String>
        internalGetScopes() {
      if (scopes_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            ScopesDefaultEntryHolder.defaultEntry);
      }
      return scopes_;
    }
    private com.google.protobuf.MapField<java.lang.String, java.lang.String>
        internalGetMutableScopes() {
      if (scopes_ == null) {
        scopes_ = com.google.protobuf.MapField.newMapField(
            ScopesDefaultEntryHolder.defaultEntry);
      }
      if (!scopes_.isMutable()) {
        scopes_ = scopes_.copy();
      }
      bitField0_ |= 0x00000004;
      onChanged();
      return scopes_;
    }
    public int getScopesCount() {
      return internalGetScopes().getMap().size();
    }
    /**
     * <pre>
     * The available scopes for the OAuth2 security scheme. A map between the
     * scope name and a short description for it. The map MAY be empty.
     * </pre>
     *
     * <code>map&lt;string, string&gt; scopes = 3 [json_name = "scopes"];</code>
     */
    @java.lang.Override
    public boolean containsScopes(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      return internalGetScopes().getMap().containsKey(key);
    }
    /**
     * Use {@link #getScopesMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.String> getScopes() {
      return getScopesMap();
    }
    /**
     * <pre>
     * The available scopes for the OAuth2 security scheme. A map between the
     * scope name and a short description for it. The map MAY be empty.
     * </pre>
     *
     * <code>map&lt;string, string&gt; scopes = 3 [json_name = "scopes"];</code>
     */
    @java.lang.Override
    public java.util.Map<java.lang.String, java.lang.String> getScopesMap() {
      return internalGetScopes().getMap();
    }
    /**
     * <pre>
     * The available scopes for the OAuth2 security scheme. A map between the
     * scope name and a short description for it. The map MAY be empty.
     * </pre>
     *
     * <code>map&lt;string, string&gt; scopes = 3 [json_name = "scopes"];</code>
     */
    @java.lang.Override
    public /* nullable */
java.lang.String getScopesOrDefault(
        java.lang.String key,
        /* nullable */
java.lang.String defaultValue) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<java.lang.String, java.lang.String> map =
          internalGetScopes().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     * The available scopes for the OAuth2 security scheme. A map between the
     * scope name and a short description for it. The map MAY be empty.
     * </pre>
     *
     * <code>map&lt;string, string&gt; scopes = 3 [json_name = "scopes"];</code>
     */
    @java.lang.Override
    public java.lang.String getScopesOrThrow(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<java.lang.String, java.lang.String> map =
          internalGetScopes().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }
    public Builder clearScopes() {
      bitField0_ = (bitField0_ & ~0x00000004);
      internalGetMutableScopes().getMutableMap()
          .clear();
      return this;
    }
    /**
     * <pre>
     * The available scopes for the OAuth2 security scheme. A map between the
     * scope name and a short description for it. The map MAY be empty.
     * </pre>
     *
     * <code>map&lt;string, string&gt; scopes = 3 [json_name = "scopes"];</code>
     */
    public Builder removeScopes(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      internalGetMutableScopes().getMutableMap()
          .remove(key);
      return this;
    }
    /**
     * Use alternate mutation accessors instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.String>
        getMutableScopes() {
      bitField0_ |= 0x00000004;
      return internalGetMutableScopes().getMutableMap();
    }
    /**
     * <pre>
     * The available scopes for the OAuth2 security scheme. A map between the
     * scope name and a short description for it. The map MAY be empty.
     * </pre>
     *
     * <code>map&lt;string, string&gt; scopes = 3 [json_name = "scopes"];</code>
     */
    public Builder putScopes(
        java.lang.String key,
        java.lang.String value) {
      if (key == null) { throw new NullPointerException("map key"); }
      if (value == null) { throw new NullPointerException("map value"); }
      internalGetMutableScopes().getMutableMap()
          .put(key, value);
      bitField0_ |= 0x00000004;
      return this;
    }
    /**
     * <pre>
     * The available scopes for the OAuth2 security scheme. A map between the
     * scope name and a short description for it. The map MAY be empty.
     * </pre>
     *
     * <code>map&lt;string, string&gt; scopes = 3 [json_name = "scopes"];</code>
     */
    public Builder putAllScopes(
        java.util.Map<java.lang.String, java.lang.String> values) {
      internalGetMutableScopes().getMutableMap()
          .putAll(values);
      bitField0_ |= 0x00000004;
      return this;
    }

    // @@protoc_insertion_point(builder_scope:a2a.v1.ImplicitOAuthFlow)
  }

  // @@protoc_insertion_point(class_scope:a2a.v1.ImplicitOAuthFlow)
  private static final io.a2a.grpc.ImplicitOAuthFlow DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new io.a2a.grpc.ImplicitOAuthFlow();
  }

  public static io.a2a.grpc.ImplicitOAuthFlow getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<ImplicitOAuthFlow>
      PARSER = new com.google.protobuf.AbstractParser<ImplicitOAuthFlow>() {
    @java.lang.Override
    public ImplicitOAuthFlow parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<ImplicitOAuthFlow> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<ImplicitOAuthFlow> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public io.a2a.grpc.ImplicitOAuthFlow getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

